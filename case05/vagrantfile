require 'yaml'

current_dir = File.dirname(File.expand_path(__FILE__))
vagrant_config = YAML.load_file("#{current_dir}/vagrant_config.yaml")

Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/trusty64"
    config.vm.box_url = "ubuntu/trusty64"

    config.vm.define vagrant_config['kafka']['name'] do |kafka|
        kafka.vm.hostname = vagrant_config['kafka']['name']
        kafka.vm.network "private_network", ip: vagrant_config['kafka']['ip']
        kafka.vm.network :forwarded_port, guest: 22, host: vagrant_config['kafka']['ssh_port'], id: "ssh"
        kafka.vm.provider :virtualbox do |vb|
            vb.name = vagrant_config['kafka']['name']
            vb.customize ["modifyvm", :id, "--memory", vagrant_config['kafka']['memory']]
        end
        kafka.vm.provision :fabric do |fabric|
            fabric.fabfile_path = "../fabfile.py"
            fabric.tasks = ["ubuntu.update", "kafka.full:configuration=../fabric_scripts/configuration/kafka", "ubuntu.cleanup"]
        end
    end

    config.vm.define vagrant_config['servers']['name'] do |servers|
        servers.vm.hostname = vagrant_config['servers']['name']
        servers.vm.network "private_network", ip: vagrant_config['servers']['ip']
        servers.vm.network :forwarded_port, guest: 22, host: vagrant_config['servers']['ssh_port'], id: "ssh"
        servers.vm.network :forwarded_port, guest: 8089, host: 8089
        servers.vm.synced_folder ".", "/home/vagrant/code"
        servers.vm.provider :virtualbox do |vb|
            vb.name = vagrant_config['servers']['name']
            vb.customize ["modifyvm", :id, "--memory", vagrant_config['servers']['memory']]
        end
        servers.vm.provision :fabric do |fabric|
            fabric.fabfile_path = "../fabfile.py"
            hosts_provision = "ubuntu.hosts.add:ip=" + vagrant_config['kafka']['ip'] + ",name=" + vagrant_config['kafka']['name']
            fabric.tasks = ["ubuntu.update", hosts_provision, "python.locust.full", "development.gplusplus.install", "nodejs.install", "nodejs.tools.install", "ubuntu.cleanup"]
        end
    end    
end